from PIL import Image, ImageDraw
import glob

all_positions = [(0, 1), (6, 113), (19, 118), (45, 114), (60, 108), (71, 102), (103, 81), (109, 38), (101, 19), (88, 7), (70, 51), (62, 113), (60, 154), (97, 158), (111, 120), (104, 100), (84, 90), (84, 91), (113, 113), (143, 109), (190, 72), (193, 51), (188, 42), (179, 46), (166, 94), (164, 114), (182, 119), (226, 102), (253, 71), (258, 68), (244, 77), (219, 99), (228, 113), (265, 99), (268, 77), (268, 67), (254, 107), (263, 113), (300, 89), (338, 69), (340, 70), (329, 73), (311, 89), (317, 116), (337, 109), (341, 83), (342, 74), (342, 84), (338, 133), (337, 148), (312, 160), (311, 160), (315, 146), (349, 109), (367, 99), (368, 99), (363, 98), (342, 72), (349, 36), (348, 16), (330, 16), (313, 26), (322, 49), (326, 70), (317, 78), (310, 80), (312, 81), (320, 85), (320, 92), (307, 105), (300, 134), (335, 148), (343, 144), (308, 158), (0, 0), (105, 94), (104, 65), (101, 64), (69, 39), (66, 32), (66, 31), (48, 80), (45, 137), (106, 130), (144, 57), (131, 25), (123, 87), (126, 112), (126, 118), (133, 107), (152, 79), (168, 98), (170, 113), (211, 113), (233, 101), (226, 71), (213, 74), (210, 109), (223, 116), (268, 102), (277, 96), (277, 80), (277, 77), (273, 103), (284, 133), (305, 120), (321, 84), (325, 77), (320, 147), (0, 0), (299, 154), (327, 96), (347, 92), (231, 131), (110, 115), (15, 85), (4, 73), (39, 65), (139, 56), (129, 57), (172, 121), (235, 106), (230, 102), (229, 99), (208, 86), (179, 122), (205, 136), (229, 90), (237, 42), (236, 45), (221, 123), (249, 136), (263, 129), (270, 100), (272, 91), (268, 117), (273, 133), (303, 115), (305, 88), (296, 75), (276, 83), (276, 100), (293, 99), (316, 88), (358, 70), (359, 73), (358, 90), (359, 89), (371, 73), (377, 75), (388, 82), (389, 83), (389, 93), (386, 122), (401, 140), (448, 110), (465, 49), (470, 32), (466, 57), (463, 132), (512, 121), (526, 110), (526, 109), (504, 75), (504, 74), (501, 72), (346, 59), (351, 61), (316, 132), (116, 56), (125, 35), (115, 30), (115, 32), (80, 85), (74, 120), (131, 129), (167, 110), (175, 87), (161, 84), (151, 108), (158, 122), (163, 123), (184, 129), (220, 117), (250, 94), (265, 86), (267, 82), (267, 83), (228, 102), (218, 116), (258, 135), (285, 95), (280, 86), (277, 98), (275, 130), (313, 125), (318, 97), (335, 86), (349, 79), (347, 82), (323, 90), (323, 122), (326, 129), (357, 144), (408, 121), (424, 53), (405, 16), (395, 78), (395, 137), (397, 139), (407, 77), (445, 77), (450, 109), (448, 146), (502, 131), (500, 126), (0, 0), (54, 120), (21, 97), (29, 62), (30, 61), (227, 64), (171, 90), (161, 95), (158, 98), (156, 97), (133, 80), (114, 82), (101, 106), (115, 122), (153, 125), (173, 115), (195, 93), (192, 74), (185, 99), (186, 125), (222, 122), (237, 111), (240, 94), (242, 86), (242, 81), (237, 106), (242, 119), (260, 126), (278, 114), (290, 90), (290, 84), (292, 77), (292, 73), (291, 82), (293, 91), (313, 92), (316, 87), (316, 88), (311, 102), (305, 125), (324, 129), (349, 114), (367, 85), (369, 69), (370, 68), (382, 79), (394, 103), (361, 119), (357, 130), (358, 128), (408, 123), (423, 104), (428, 80), (428, 77), (425, 113), (424, 136), (442, 133), (459, 117), (470, 93), (472, 78), (473, 77), (470, 106), (474, 122), (493, 130), (520, 126), (540, 78), (539, 75), (538, 84), (546, 91), (568, 83), (582, 73), (583, 53), (561, 67), (543, 136), (628, 126), (645, 116), (622, 119), (374, 105), (325, 64), (358, 52), (346, 49), (350, 52), (354, 48), (354, 49), (346, 46), (206, 30), (117, 27), (109, 56), (107, 91), (106, 91), (88, 54), (72, 70), (65, 125), (107, 124), (114, 96), (112, 86), (115, 117), (120, 132), (154, 106), (153, 78), (158, 76), (164, 97), (161, 102), (178, 78), (191, 84), (190, 97), (188, 103), (186, 107), (194, 119), (238, 118), (250, 82), (251, 77), (248, 95), (243, 144), (228, 154), (217, 145), (245, 112), (275, 104), (288, 84), (291, 75), (294, 67), (307, 78), (308, 87), (307, 86), (310, 69), (319, 70), (323, 74), (324, 80), (324, 82), (324, 83), (324, 82), (331, 74), (343, 65), (351, 72), (353, 77), (353, 78), (353, 82), (353, 84), (353, 86), (353, 87), (345, 109), (347, 120), (367, 131), (402, 118), (415, 96), (415, 74), (415, 77), (402, 114), (429, 107), (472, 94), (462, 71), (440, 65), (423, 70), (422, 73), (422, 75), (456, 91), (487, 93), (495, 82), (502, 73), (503, 69), (507, 87), (525, 90), (526, 81), (507, 107), (525, 132), (577, 127), (601, 96), (602, 75), (577, 78), (579, 118), (613, 130), (642, 118), (639, 120), (633, 136), (428, 120), (320, 80), (321, 11), (367, 19), (367, 40), (361, 47), (347, 54), (343, 61), (343, 66), (360, 72), (364, 73), (353, 77), (345, 84), (346, 89), (357, 105), (356, 117), (341, 132), (323, 130), (320, 130), (321, 130), (320, 132), (320, 135)]

def extract_cursor():
    all_positions=[]
    work_dir = "C:/Users/Bryan/Desktop/tenable/gif_file"
    files = "frame*.gif" 

    matching_files = glob.glob(work_dir + "/" + files)

    for file_path in matching_files:
        try:
            cursor_image_path = file_path
            cursor_image = Image.open(cursor_image_path)
        
            cursor_color = 0

            cursor_positions = []
            width, height = cursor_image.size
            for x in range(width):
                for y in range(height):
                    pixel = cursor_image.getpixel((x, y))
                    if pixel == cursor_color:
                        cursor_positions.append((x, y))

            all_positions.append(cursor_positions[1])

            print(all_positions)
        except: 
            all_positions.append((0,0))
     
def draw_connected_lines(coordinates):
    size = (700, 300)  
    images = []  

    img = Image.new("RGB", size, (255, 255, 255))
    draw = ImageDraw.Draw(img)

    for i, coord in enumerate(coordinates):
        if coord == (0, 0) or coord > (630,0): #customize the coord > (480,0) and coord > (630,0) for clarity
            img = Image.new("RGB", size, (255, 255, 255))
            draw = ImageDraw.Draw(img)
            images.append(img)
            continue

        if i > 0:
            draw.line([coordinates[i - 1], coord], fill=(0, 0, 0), width=5)            

        images.append(img.copy())

    return images



# Call the function to draw the connected lines
frames = draw_connected_lines(all_positions)

# Save the frames as a GIF
frames[0].save("last_part.gif", save_all=True, append_images=frames[1:], loop=0, duration=100)